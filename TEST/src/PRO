#include <iostream>
#include <cString>
#include <time.h>
using namespace std;

int main() {
	cout << "!!!Hello World!!!" << endl; // prints !!!Hello World!!!
	return 0;

	
	//int main(){
	/*int a=987654321;
	*int first=0, last=0;
	while(a!=0){
		last=a%10;
		first=first*10+last;
		a=a/10;
	}	cout<<first;

	return 0;
	}
	*/
/*
int main(){
    srand(time(NULL));
	int a = rand()%100;
	int max=6,min=4;
	int s = rand()%(max-min+1)+min;
	cout<<s;
	int a = rand()%6+3;
	cout<<a;
	return 0;
}

	int sum=0;
	int i;
	int num[5];
	for(i=0;i<5;i++){
		cin>>num[i];
		sum=sum+num[i];
	}
	cout<<sum<<endl;


int main(){
	srand(time(NULL));
	int max=100,min=0;
	int ran= rand()%(max-min+1);
	int n,i=10;
	int a;
	for(n=0;n<i;n++){
	cout<<"ENTER A NUMBER:";
	cin>>a;

	if(a==ran){
		cout<<"match"<<'\n';
		exit(0);
	}
	else{
		if(a>ran){
			cout<<"greater than match"<<'\n';
		}
		else{
			cout<<"less than match"<<'\n';
		}
	}
	}
	return 0;
}



//char *b=strstr(s,a);

	if(strstr(s,a))
		*cout<<"present"<<'\n';
	else
		cout<<"null"<<'\n';

		string a="12345";
	int b=a.find("1");
	if(b !=string::npos)
		cout<<"saavu";
	else
		cout<<"die"; 
		
		int a= 123;
	int first,last,l1,l2;
	first=a/10;
	last=a%10;
	l1=first%10;
	l2=first/10;
	cout<<first<<'\n';
	cout<<last<<'\n';
	cout<<l1<<'\n';
	cout<<l2<<'\n';
	return 0;
	}
	*/
// find first string is subsequent of second


bool isSubSequence(char str1[],char str2[],int a, int b){

	if( a==0)
		return true;
	if( b==0)
		return false;
	//if last 2 characters of string match
	if (str1[a-1]== str2[b-1]){
		return isSubSequence( str1, str2, a-1, b-1);
	}
	//if not match
	else{
		return isSubSequence(str1,str2,a,b-1);
	}

	OR

	int j=0;
	//comparing each index
	 for(int i=0; i<a && j<b;i++){
	 if( str1[j]==str2[i])
	 j++;
	 }
	 return (j= a);
}
int main(){
	char str1[]="nitkan";
	char str2[]="nitheshkanna";
	int a = strlen(str1);
	int b = strlen(str2);
	isSubSequence(str1,str2,a,b)? cout<<"true"
								: cout<<"false";
	
	return 0;
	}
	
	
int main() {

	int a[100], i, n, max, min;
	cin>>n;
	cout<<"ENTER INPUT"<<endl;
	for(i=0;i<n;i++){
		cin>>a[i];
		}
	for(i=0;i<n;i++){
		if(a[i]>a[0]){
			max=a[i];
		}
	}
	for(i=1;i<n;i++){
				if(a[i]<a[0]){
					min=a[i];
				}
	}

	cout<<min<<endl<<max;
	return 0;
}

CRYPTOGRAPHY:

#include<iostream>
#include<stdlib.h>
#include<math.h>
#include<string.h>

using namespace std;

int x, y, n, t, i, flag;
long int e[50], d[50], temp[50], j;
char en[50], m[50];
char msg[100];
int prime(long int); //function to check for prime number
void encryption_key();
long int cd(long int);
void encrypt();
void decrypt();

int main()
{
   cout << "\nENTER AM PRIME NUMBER\n";
   cin >> x;

   //checking whether input is prime or not
   flag = prime(x);
   if(flag == 0)
   {
      cout << "\nINVALID INPUT\n";
      exit(0);
   }

   cout << "\nENTER SECOND PRIME NUMBER\n";
   cin >> y;

   flag = prime(y);
   if(flag  == 0 || x == y)
   {
      cout << "\nINVALID INPUT\n";
      exit(0);
   }

   cout << "\nENTER MESSAGE OR STRING TO ENCRYPT\n";
   cin >> msg;

   for(i = 0; msg[i] != NULL; i++)
      m[i] = msg[i];
   n = x * y;
   t = (x - 1) * (y - 1);

   encryption_key();
   cout << "\nPOSSIBLE VALUES OF e AND d ARE\n";

   for(i = 0; i < j - 1; i++)
      cout << "\n" << e[i] << "\t" << d[i];

   encrypt();
   decrypt();
   return 0;
} //end of the main program

int prime(long int pr)
{
   int i;
   j = sqrt(pr);
   for(i = 2; i <= j; i++)
   {
      if(pr % i == 0)
         return 0;
   }
   return 1;
 }

//function to generate encryption key
void encryption_key()
{
   int k;
   k = 0;
   for(i = 2; i < t; i++)
   {
      if(t % i == 0)
         continue;
      flag = prime(i);
      if(flag == 1 && i != x && i != y)
      {
         e[k] = i;
         flag = cd(e[k]);
         if(flag > 0)
         {
            d[k] = flag;
            k++;
         }
         if(k == 99)
         break;
      }
   }
}

long int cd(long int a)
{
   long int k = 1;
   while(1)
   {
      k = k + t;
      if(k % a == 0)
         return(k/a);
   }
}

//function to encrypt the message
void encrypt()
{
   long int pt, ct, key = e[0], k, len;
   i = 0;
   len = strlen(msg);

   while(i != len)
   {
      pt = m[i];
      pt = pt - 96;
      k = 1;
      for(j = 0; j < key; j++)
      {
         k = k * pt;
         k = k % n;
      }
      temp[i] = k;
      ct= k + 96;
      en[i] = ct;
      i++;
   }
   en[i] = -1;
   cout << "\n\nTHE ENCRYPTED MESSAGE IS\n";
   for(i=0; en[i] != -1; i++)
      cout << en[i];
}

//function to decrypt the message
void decrypt()
{
   long int pt, ct, key = d[0], k;
   i = 0;
   while(en[i] != -1)
   {
      ct = temp[i];
      k = 1;
      for(j = 0; j < key; j++)
      {
         k = k * ct;
         k = k % n;
      }
      pt = k + 96;
      m[i] = pt;
      i++;
   }
   m[i] = -1;
   cout << "\n\nTHE DECRYPTED MESSAGE IS\n";
   for(i = 0; m[i] != -1; i++)
      cout << m[i];

  cout << endl;
}



	
